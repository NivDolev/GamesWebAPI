{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-router.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/game-edit/game-edit.component.css","webpack:///./src/app/game-edit/game-edit.component.html","webpack:///./src/app/game-edit/game-edit.component.ts","webpack:///./src/app/game-new/game-new.component.css","webpack:///./src/app/game-new/game-new.component.html","webpack:///./src/app/game-new/game-new.component.ts","webpack:///./src/app/games-list/games-list.component.css","webpack:///./src/app/games-list/games-list.component.html","webpack:///./src/app/games-list/games-list.component.ts","webpack:///./src/app/games-search/games-search.component.css","webpack:///./src/app/games-search/games-search.component.html","webpack:///./src/app/games-search/games-search.component.ts","webpack:///./src/app/navigation/navigation.component.css","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/services/game.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { GameNewComponent } from './game-new/game-new.component';\r\nimport { GameEditComponent } from './game-edit/game-edit.component';\r\nimport { GamesSearchComponent } from './games-search/games-search.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { GamesListComponent } from './games-list/games-list.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'search', component: GamesSearchComponent },\r\n    { path: 'games/new', component: GameNewComponent },\r\n    { path: 'games/:id', component: GameEditComponent },\r\n    { path: 'games', component: GamesListComponent },\r\n    { path: '', redirectTo: 'games', pathMatch: 'full' },\r\n    { path: '**', redirectTo: 'games', pathMatch: 'full' }\r\n];\r\n\r\n\r\n@NgModule({\r\n    exports: [RouterModule],\r\n    imports: [RouterModule.forRoot(routes)],\r\n    providers: []\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <app-navigation></app-navigation>\\n    <div class=\\\"container-fluid\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { AppRoutingModule } from './app-router.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { GamesListComponent } from './games-list/games-list.component';\nimport { GamesSearchComponent } from './games-search/games-search.component';\nimport { GameEditComponent } from './game-edit/game-edit.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GameNewComponent } from './game-new/game-new.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GamesListComponent,\n    GamesSearchComponent,\n    GameEditComponent,\n    NavigationComponent,\n    GameNewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".btn-success {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"col-3\\\">\\n  <h2>Game Details:</h2>\\n  <div *ngIf=\\\"game\\\">\\n    <form>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"gameId\\\">Game Id:</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"gameId\\\" #gameId [(ngModel)]=\\\"game.Id\\\" \\n        id=\\\"inputId\\\" [value]=\\\"game.Id\\\" disabled>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"gameName\\\">Game Name:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"gameName\\\" #gameName [(ngModel)]=\\\"game.Game_Name\\\"\\n        id=\\\"inputGameName\\\" [value]=\\\"game.Game_Name\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"playerOne\\\">Player One:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"playerOne\\\" #playerOne [(ngModel)]=\\\"game.Player_One\\\"\\n        id=\\\"inputPlayerOne\\\" [value]=\\\"game.Player_One\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"playerTwo\\\">Player Two:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"playerTwo\\\" #playerTwo [(ngModel)]=\\\"game.Player_Two\\\"\\n        id=\\\"inputPlayerTwo\\\" [value]=\\\"game.Player_Two\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"gameWinner\\\">Winner:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"gameWinner\\\" #gameWinner [(ngModel)]=\\\"game.Winner\\\"\\n        id=\\\"winner\\\" [value]=\\\"game.Winner ? 'Player One' : 'Player Two'\\\">\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onUpdateGame(game)\\\" [class.disabled]=\\\"game.Id == 0\\\">Update</button>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger float-right\\\" (click)=\\\"onDeleteGame(game.Id)\\\">Delete</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div *ngIf=\\\"!game\\\">\\n    <h2>Game Not Found</h2>\\n  </div>\\n</div>\\n\"","import { GameService } from './../services/game.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Game } from '../Model/game.model';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-game-edit',\n  templateUrl: './game-edit.component.html',\n  styleUrls: ['./game-edit.component.css']\n})\nexport class GameEditComponent implements OnInit {\n  game: Game;\n  gameId: number;\n  constructor(\n    private gameService: GameService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.gameService.getGameById(id).subscribe((game: Game) => this.game = game);\n  }\n\n  onUpdateGame(): void {\n    this.gameService.updateGame(this.game).subscribe(data => {\n      console.log(data);\n      this.navigateBack();\n    });\n  }\n\n  onDeleteGame(): void {\n    this.gameService.deleteGame(this.game.Id).subscribe(data => {\n      console.log(data);\n      this.navigateBack();\n    });\n  }\n\n  navigateBack(): void {\n    this.router.navigate(['games']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-3\\\">\\r\\n  <div>\\r\\n    <h2>Game details:</h2>\\r\\n  </div>\\r\\n  <form #newGame=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(newGame)\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"Game_Name\\\">Game Name:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Game_Name\\\" id=\\\"gameName\\\" ngModel required>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"Player_One\\\">Player One:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Player_One\\\" id=\\\"playerOne\\\" ngModel required>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"Player_Two\\\">Player Two:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Player_Two\\\" id=\\\"playerTwo\\\" ngModel required>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"Winner\\\">Winner:</label>\\r\\n      <select class=\\\"custom-select\\\" name=\\\"Winner\\\" id=\\\"winner\\\" ngModel required>\\r\\n        <option value=\\\"\\\">Choose Player</option>\\r\\n        <option value=\\\"0\\\">Player One</option>\\r\\n        <option value=\\\"1\\\">Player Two</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [class.disabled]=\\\"newGame.invalid\\\">Creat Game</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Router } from '@angular/router';\nimport { GameService } from './../services/game.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-game-new',\n  templateUrl: './game-new.component.html',\n  styleUrls: ['./game-new.component.css']\n})\nexport class GameNewComponent implements OnInit {\n\n  constructor(\n    private gameService: GameService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form: any) {\n    console.log(form.value);\n    this.gameService.addNewGame(form.value).subscribe(data => {\n      console.log(data);\n      this.router.navigate(['/games']);\n    });\n  }\n}\n","module.exports = \".selected {\\r\\n    background-color:lightblue;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <table class=\\\"table\\\">\\n            <thead>\\n              <tr>\\n                <th scope=\\\"col-1\\\">#</th>\\n                <th scope=\\\"col-2\\\">Game Name</th>\\n                <th scope=\\\"col-2\\\">Player One</th>\\n                <th scope=\\\"col-2\\\">Player Two</th>\\n                <th scope=\\\"col-2\\\">Winner</th>\\n                <th scope=\\\"col-1\\\">\\n                  <a routerLink=\\\"/games/new\\\" class=\\\"btn btn-success\\\">Create new Game</a>\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let game of games\\\"\\n              (click)=\\\"selectGame(game)\\\"\\n              [class.selected]=\\\"selectedGame === game\\\">\\n                <th scope=\\\"row\\\">{{game.Id}}</th>\\n                <td>{{game.Game_Name}}</td>\\n                <td>{{game.Player_One}}</td>\\n                <td>{{game.Player_Two}}</td>\\n                <td>{{game.Winner ? \\\"Player One\\\" : \\\"Player Two\\\"}}</td>\\n                <td><a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/games', game.Id]\\\">Details</a></td>\\n              </tr>\\n            </tbody>\\n          </table>\\n    </div>\\n</div>\"","import { GameService } from './../services/game.service';\nimport { Component, OnInit, Output } from '@angular/core';\nimport { Game } from '../Model/game.model';\n\n@Component({\n  selector: 'app-games-list',\n  templateUrl: './games-list.component.html',\n  styleUrls: ['./games-list.component.css']\n})\nexport class GamesListComponent implements OnInit {\n\n  games: Game[];\n\n  @Output()\n  selectedGame: any;\n\n  constructor(private gameService: GameService) { }\n\n  ngOnInit() {\n    this.gameService.getAllGames().subscribe(games => {\n      this.games = games.sort();\n      this.onSort();\n    });\n  }\n\n  selectGame(game: any) {\n    this.selectedGame = game;\n  }\n\n  onSort() {\n    this.games = this.games.sort(function (a, b) {\n      if (a['Id'] < b['Id']) {\n        return -1;\n      } else if (b['Id'] < a['Id']) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-2\\\">\\n      <h2>Refinements:</h2>\\n      <form #newGame=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(newGame)\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"GameId\\\">Game Id:</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"GameId\\\" id=\\\"gameId\\\" ngModel>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"Game_Name\\\">Game Name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Game_Name\\\" id=\\\"gameName\\\" ngModel>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"Player_One\\\">Player One:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Player_One\\\" id=\\\"playerOne\\\" ngModel>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"Player_Two\\\">Player Two:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Player_Two\\\" id=\\\"playerTwo\\\" ngModel>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"Winner\\\">Winner:</label>\\n          <select class=\\\"custom-select\\\" name=\\\"Winner\\\" id=\\\"winner\\\" ngModel>\\n            <option value=\\\"\\\">Choose Player</option>\\n            <option value=\\\"1\\\">Player One</option>\\n            <option value=\\\"0\\\">Player Two</option>\\n          </select>\\n        </div>\\n        <div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Search</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-primary float-right\\\" ng-click=\\\"reset()\\\" (click)=\\\"onClearResults()\\\">Clear</button>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n    <div class=\\\"col-9\\\">\\n      <h2>Search Results:</h2>\\n      <table *ngIf=\\\"games && games.length > 0\\\" class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col-1\\\">#</th>\\n            <th scope=\\\"col-2\\\">Game Name</th>\\n            <th scope=\\\"col-2\\\">Player One</th>\\n            <th scope=\\\"col-2\\\">Player Two</th>\\n            <th scope=\\\"col-2\\\">Winner</th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let game of games\\\">\\n            <th scope=\\\"row\\\">{{game.Id}}</th>\\n            <td>{{game.Game_Name}}</td>\\n            <td>{{game.Player_One}}</td>\\n            <td>{{game.Player_Two}}</td>\\n            <td>{{game.Winner ? \\\"Player One\\\" : \\\"Player Two\\\"}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <h3 *ngIf=\\\"(searched && !games) || (searched && games && games.length == 0)\\\">\\n          Sorry, no games were found, try a different search terms</h3>\\n          \\n    </div>\\n  </div>\\n</div>\\n\"","import { element } from 'protractor';\nimport { GameService } from './../services/game.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Game } from '../Model/game.model';\n\n@Component({\n  selector: 'app-games-search',\n  templateUrl: './games-search.component.html',\n  styleUrls: ['./games-search.component.css']\n})\nexport class GamesSearchComponent implements OnInit {\n\n  games: Game[];\n  searched = false;\n  constructor(private gameService: GameService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form: any): void {\n    console.log(form.value);\n    const params = form.value;\n    this.gameService.getGamesBySearchParams(\n      +params.GameId, params.Game_Name, params.Player_One, params.Player_Two, params.Winner)\n      .subscribe(games => {\n        this.games = games;\n        console.log(this.games);\n      });\n    this.searched = true;\n  }\n\n  onClearResults(): void {\n    this.games = [];\n    this.searched = false;\n  }\n}\n","module.exports = \"nav {\\r\\n    margin-bottom: 15px;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\">GDB</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"games\\\">Games List</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"search\\\">Search</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Game } from '../Model/game.model';\n\nconst siteUrl = 'http://localhost:49866/api/games/';\nconst httpOptions = {\n  headers: new HttpHeaders(\n      {\n      'Content-Type': 'application/json',\n      'Data-Type' : 'json' }\n  )\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n\n  constructor(private http: HttpClient) { }\n\n   getAllGames(): Observable<Game[]> {\n    return this.http.get<Game[]>(siteUrl);\n  }\n\n  getGameById(id: number): Observable<Game> {\n    return this.http.get<Game>(siteUrl + id);\n  }\n\n  getGamesByPlayerName(name: string): Observable<Game[]> {\n    return this.http.get<Game[]>(siteUrl + name);\n  }\n\n  getGamesBySearchParams(id?: number, gameName?: string, playerOne?: string,\n                         playerTwo?: string, winner?: string): Observable<Game[]> {\n    let searchParams = `id=${id}`;\n    if (playerOne != null && playerOne !== '') {searchParams += `&playerOne=${playerOne}`; }\n    if (playerTwo != null && playerTwo !== '') {searchParams += `&playerTwo=${playerTwo}`; }\n    if (gameName != null && gameName !== '') {searchParams += `&gameName=${gameName}`; }\n    if (winner != null && winner !== '') {searchParams += `&winner=${+winner}`; }\n    console.log(`${siteUrl}seach?${searchParams}`);\n    return this.http.get<Game[]>(`${siteUrl}seach?${searchParams}`);\n  }\n\n  addNewGame(game): Observable<Game> {\n    return this.http.post<Game>(siteUrl, game, httpOptions);\n  }\n\n  updateGame(game: Game): Observable<Game> {\n    const url = siteUrl + game.Id;\n    console.log(url);\n    return this.http.put<Game>(url, game);\n  }\n\n  deleteGame(id: number): Observable<Game> {\n    return this.http.delete<Game>(siteUrl + id, httpOptions);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}